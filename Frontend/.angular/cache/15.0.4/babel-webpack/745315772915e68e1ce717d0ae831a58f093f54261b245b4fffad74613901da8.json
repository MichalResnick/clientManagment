{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Owner/Desktop/Studies/Client Menagment/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nexport class ListComponent {\n  constructor(service) {\n    this.service = service;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    return _asyncToGenerator(function* () {\n      try {} catch (error) {}\n    })();\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 0,\n  vars: 0,\n  template: function ListComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,aAAa;EAExBC,YAA2BC,OAAmB;IAAnB,YAAO,GAAPA,OAAO;IAE3B,UAAK,GAAa,EAAE;EAFqB;EAInCC,QAAQ;IAAA;MAEnB,IAAI,EAEH,CAAC,OAAOC,KAAK,EAAE;IAEf;EAGH;;AAfWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["ListComponent","constructor","service","ngOnInit","error","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\Owner\\Desktop\\Studies\\Client Menagment\\Frontend\\src\\app\\components\\data-area\\list\\list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskModel } from 'src/app/models/task-model';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public constructor(private service:DataService){}\n\n  public tasks:TaskModel[]=[]\n\n  public async ngOnInit() {\n\n    try {\n      \n    } catch (error) {\n      \n    }\n  \n   \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}