{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Owner/Desktop/Studies/Client Menagment/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllClients() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(appConfig.clientsUrl);\n      const clients = yield firstValueFrom(observable);\n      return clients;\n    })();\n  }\n  getAllTasks() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this2.http.get(appConfig.tasksUrl);\n      const tasks = yield firstValueFrom;\n      return tasks;\n    })();\n  }\n  addTask(task) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this3.http.post(appConfig.tasksUrl, task);\n      yield firstValueFrom(observable);\n    })();\n  }\n  deletTask(_id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const observable = _this4.http.delete(appConfig.tasksUrl + _id);\n      yield firstValueFrom(observable);\n    })();\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,cAAc,QAAQ,MAAM;;;AAMrC,OAAM,MAAOC,WAAW;EAEpBC,YAA2BC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEtCC,aAAa;IAAA;IAAA;MACnB,MAAMC,UAAU,GAAC,KAAI,CAACF,IAAI,CAACG,GAAG,CAAgBP,SAAS,CAACQ,UAAU,CAAC;MACnE,MAAMC,OAAO,SAAQR,cAAc,CAACK,UAAU,CAAC;MAC9C,OAAOG,OAAO;IAAA;EAClB;EAESC,WAAW;IAAA;IAAA;MAChB,MAAMJ,UAAU,GAAC,MAAI,CAACF,IAAI,CAACG,GAAG,CAAcP,SAAS,CAACW,QAAQ,CAAC;MAC/D,MAAMC,KAAK,SAAOX,cAAc;MAC/B,OAAOW,KAAK;IAAA;EAChB;EAEQC,OAAO,CAACC,IAAc;IAAA;IAAA;MAC3B,MAAMR,UAAU,GAAC,MAAI,CAACF,IAAI,CAACW,IAAI,CAAYf,SAAS,CAACW,QAAQ,EAACG,IAAI,CAAC;MACnE,MAAMb,cAAc,CAACK,UAAU,CAAC;IAAA;EACpC;EAESU,SAAS,CAACC,GAAU;IAAA;IAAA;MACzB,MAAMX,UAAU,GAAC,MAAI,CAACF,IAAI,CAACc,MAAM,CAAYlB,SAAS,CAACW,QAAQ,GAACM,GAAG,CAAC;MACpE,MAAMhB,cAAc,CAACK,UAAU,CAAC;IAAA;EACpC;;AAxBSJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFR;AAAM","names":["appConfig","firstValueFrom","DataService","constructor","http","getAllClients","observable","get","clientsUrl","clients","getAllTasks","tasksUrl","tasks","addTask","task","post","deletTask","_id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Owner\\Desktop\\Studies\\Client Menagment\\Frontend\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ClientModel } from '../models/client-model';\nimport { appConfig } from '../utils/app-config';\nimport { firstValueFrom } from 'rxjs';\nimport { TaskModel } from '../models/task-model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n\n    public constructor(private http: HttpClient) { }\n\npublic async getAllClients():Promise<ClientModel[]> {\n       const observable=this.http.get<ClientModel[]>(appConfig.clientsUrl)\n       const clients= await firstValueFrom(observable)\n        return clients      \n    }\n\npublic async getAllTasks():Promise<TaskModel[]> {\n        const observable=this.http.get<TaskModel[]>(appConfig.tasksUrl)\n        const tasks=await firstValueFrom\n         return tasks      \n     }\n\npublic async addTask(task:TaskModel):Promise<void>{\n        const observable=this.http.post<TaskModel>(appConfig.tasksUrl,task)\n        await firstValueFrom(observable)\n    }\n    \npublic async deletTask(_id:string):Promise<void>{\n        const observable=this.http.delete<TaskModel>(appConfig.tasksUrl+_id)\n        await firstValueFrom(observable) \n    } \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}