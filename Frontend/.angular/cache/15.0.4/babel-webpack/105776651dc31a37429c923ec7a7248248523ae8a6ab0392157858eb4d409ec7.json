{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Owner/Desktop/Studies/Client Menagment/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/data.service\";\nimport * as i2 from \"@angular/common\";\nfunction ListComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.descriptoin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r1.client.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 4, t_r1.date, \"dd/MM/yyyy HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"[(ngModel)]=\\\"\", t_r1.status, \"\\\" (tr)\");\n  }\n}\nexport class ListComponent {\n  constructor(service) {\n    this.service = service;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.tasks = yield _this.service.getAllTasks();\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }\n  isStatusOn(status) {\n    return _asyncToGenerator(function* () {\n      return status = true;\n    })();\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n      i0.ɵɵtext(4, \"Task:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Customer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Done?:\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, ListComponent_tr_12_Template, 10, 7, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAWQA,0BAA4B;IACpBA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAmC;;IAAAA,iBAAK;IAC5CA,0BAAI;IAAAA,YAA+B;IAAAA,iBAAK;;;;IAHpCA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAmC;IAAnCA,yEAAmC;IACnCA,eAA+B;IAA/BA,+DAA+B;;;ACN/C,OAAM,MAAOC,aAAa;EAExBC,YAA2BC,OAAmB;IAAnB,YAAO,GAAPA,OAAO;IAE3B,UAAK,GAAa,EAAE;EAFqB;EAKnCC,QAAQ;IAAA;IAAA;MAEnB,IAAI;QACF,KAAI,CAACC,KAAK,SAAQ,KAAI,CAACF,OAAO,CAACG,WAAW,EAAE;OAE7C,CAAC,OAAOC,KAAS,EAAE;QAClBC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;;IACrB;EACH;EAEaC,UAAU,CAACC,MAAc;IAAA;MACpC,OAAOA,MAAM,GAAC,IAAI;IAAA;EACpB;;AAnBWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT1BhB,6BAAO;MAGKA,qBAAK;MAAAA,iBAAK;MACdA,0BAAI;MAAAA,yBAAS;MAAAA,iBAAK;MAClBA,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,0BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAInBA,8BAAO;MACHA,+DAQK;MACTA,iBAAQ;;;MATcA,gBAAQ;MAARA,mCAAQ","names":["i0","ListComponent","constructor","service","ngOnInit","tasks","getAllTasks","error","alert","message","isStatusOn","status","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Owner\\Desktop\\Studies\\Client Menagment\\Frontend\\src\\app\\components\\data-area\\list\\list.component.html","C:\\Users\\Owner\\Desktop\\Studies\\Client Menagment\\Frontend\\src\\app\\components\\data-area\\list\\list.component.ts"],"sourcesContent":["<table>\n    <thead>\n      <tr>\n        <th>Task:</th>\n        <th>Customer:</th>\n        <th>Date:</th>\n        <th>Done?:</th>\n    </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor=\"let t of tasks\">\n            <td>{{t.descriptoin}}</td>\n            <td>{{t.client.name}}</td>\n            <td>{{t.date |date:\"dd/MM/yyyy HH:mm\"}}</td>\n            <td>[(ngModel)]=\"{{t.status}}\" (tr)</td>\n           \n\n\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { TaskModel } from 'src/app/models/task-model';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public constructor(private service:DataService){}\n\n  public tasks:TaskModel[]=[]\n  public status:boolean\n\n  public async ngOnInit() {\n\n    try {\n      this.tasks= await this.service.getAllTasks()\n\n    } catch (error:any) {\n      alert(error.message)\n    } \n  }\n\n  public async isStatusOn(status:boolean):Promise<Boolean>{\n    return status=true\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}